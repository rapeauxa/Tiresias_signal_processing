/*
 * taskCompress.h
 *
 *  Created on: 8 Aug 2022
 *      Author: Adrien Rapeaux
 */

#ifndef COMPONENTS_TASKCOMPRESS_TASKCOMPRESS_H_
#define COMPONENTS_TASKCOMPRESS_TASKCOMPRESS_H_

#include "../../components/taskRadar/taskRadar.h"

#include <string.h>
#include <stdio.h>
#include "math.h"
#include "esp_err.h"
#include "esp_log.h"
#include "freertos/FREERTOS.h"
#include "freertos/task.h"
#include "freertos/queue.h"
#include "rom/cache.h"



//#define TASK_COMPRESS_PRIORITY 3 //Above sending task and below SD service
#define TASK_COMPRESS_PRIORITY 4 //Above sd service, below radar servicing
#define TASK_COMPRESS_STACKSZ 6144
#define NB_BINS 461
#define NB_INCREMENTS 9
#define INIT_SEARCH_INDEX 230
#define TASK_COMPRESS_QUEUETIMEOUT 3000 / portTICK_PERIOD_MS

static const float pBins[461] = {
		-1.000000,
		-0.020921,
		-0.011192,
		-0.009840,
		-0.009168,
		-0.008684,
		-0.008256,
		-0.007937,
		-0.007660,
		-0.007413,
		-0.007205,
		-0.007017,
		-0.006837,
		-0.006668,
		-0.006497,
		-0.006344,
		-0.006205,
		-0.006078,
		-0.005961,
		-0.005853,
		-0.005751,
		-0.005658,
		-0.005568,
		-0.005484,
		-0.005406,
		-0.005325,
		-0.005249,
		-0.005172,
		-0.005103,
		-0.005037,
		-0.004972,
		-0.004907,
		-0.004844,
		-0.004786,
		-0.004728,
		-0.004671,
		-0.004619,
		-0.004566,
		-0.004516,
		-0.004469,
		-0.004421,
		-0.004376,
		-0.004333,
		-0.004302,
		-0.004277,
		-0.004252,
		-0.004227,
		-0.004202,
		-0.004175,
		-0.004139,
		-0.004097,
		-0.004057,
		-0.004018,
		-0.003981,
		-0.003943,
		-0.003907,
		-0.003870,
		-0.003836,
		-0.003802,
		-0.003768,
		-0.003735,
		-0.003703,
		-0.003670,
		-0.003639,
		-0.003609,
		-0.003582,
		-0.003556,
		-0.003531,
		-0.003506,
		-0.003481,
		-0.003457,
		-0.003431,
		-0.003406,
		-0.003379,
		-0.003351,
		-0.003323,
		-0.003296,
		-0.003269,
		-0.003242,
		-0.003215,
		-0.003189,
		-0.003164,
		-0.003139,
		-0.003114,
		-0.003089,
		-0.003064,
		-0.003039,
		-0.003014,
		-0.002989,
		-0.002964,
		-0.002939,
		-0.002914,
		-0.002889,
		-0.002864,
		-0.002840,
		-0.002815,
		-0.002790,
		-0.002765,
		-0.002740,
		-0.002715,
		-0.002690,
		-0.002665,
		-0.002640,
		-0.002615,
		-0.002590,
		-0.002565,
		-0.002540,
		-0.002515,
		-0.002490,
		-0.002466,
		-0.002441,
		-0.002416,
		-0.002391,
		-0.002366,
		-0.002341,
		-0.002316,
		-0.002291,
		-0.002266,
		-0.002241,
		-0.002216,
		-0.002191,
		-0.002166,
		-0.002141,
		-0.002116,
		-0.002091,
		-0.002066,
		-0.002041,
		-0.002016,
		-0.001991,
		-0.001966,
		-0.001941,
		-0.001916,
		-0.001891,
		-0.001866,
		-0.001842,
		-0.001817,
		-0.001792,
		-0.001767,
		-0.001742,
		-0.001717,
		-0.001692,
		-0.001667,
		-0.001642,
		-0.001617,
		-0.001592,
		-0.001567,
		-0.001542,
		-0.001517,
		-0.001492,
		-0.001468,
		-0.001443,
		-0.001418,
		-0.001393,
		-0.001368,
		-0.001343,
		-0.001318,
		-0.001293,
		-0.001268,
		-0.001243,
		-0.001218,
		-0.001193,
		-0.001168,
		-0.001143,
		-0.001118,
		-0.001094,
		-0.001069,
		-0.001044,
		-0.001019,
		-0.000994,
		-0.000969,
		-0.000944,
		-0.000919,
		-0.000894,
		-0.000869,
		-0.000844,
		-0.000819,
		-0.000794,
		-0.000769,
		-0.000744,
		-0.000720,
		-0.000695,
		-0.000670,
		-0.000645,
		-0.000620,
		-0.000595,
		-0.000570,
		-0.000545,
		-0.000520,
		-0.000495,
		-0.000470,
		-0.000445,
		-0.000420,
		-0.000395,
		-0.000370,
		-0.000346,
		-0.000321,
		-0.000296,
		-0.000271,
		-0.000246,
		-0.000221,
		-0.000196,
		-0.000171,
		-0.000146,
		-0.000121,
		-0.000096,
		-0.000071,
		-0.000046,
		-0.000021,
		0.000004,
		0.000028,
		0.000053,
		0.000078,
		0.000103,
		0.000128,
		0.000153,
		0.000178,
		0.000203,
		0.000228,
		0.000253,
		0.000278,
		0.000303,
		0.000328,
		0.000353,
		0.000378,
		0.000402,
		0.000427,
		0.000452,
		0.000477,
		0.000502,
		0.000527,
		0.000552,
		0.000577,
		0.000602,
		0.000627,
		0.000652,
		0.000677,
		0.000702,
		0.000727,
		0.000751,
		0.000776,
		0.000801,
		0.000826,
		0.000851,
		0.000876,
		0.000901,
		0.000926,
		0.000951,
		0.000976,
		0.001001,
		0.001026,
		0.001051,
		0.001076,
		0.001101,
		0.001125,
		0.001150,
		0.001175,
		0.001200,
		0.001225,
		0.001250,
		0.001275,
		0.001300,
		0.001325,
		0.001350,
		0.001375,
		0.001400,
		0.001425,
		0.001450,
		0.001475,
		0.001499,
		0.001524,
		0.001549,
		0.001574,
		0.001599,
		0.001624,
		0.001649,
		0.001674,
		0.001699,
		0.001724,
		0.001749,
		0.001774,
		0.001799,
		0.001824,
		0.001849,
		0.001873,
		0.001898,
		0.001923,
		0.001948,
		0.001973,
		0.001998,
		0.002023,
		0.002048,
		0.002073,
		0.002098,
		0.002123,
		0.002148,
		0.002173,
		0.002198,
		0.002223,
		0.002247,
		0.002272,
		0.002297,
		0.002322,
		0.002347,
		0.002372,
		0.002397,
		0.002422,
		0.002447,
		0.002472,
		0.002497,
		0.002522,
		0.002547,
		0.002572,
		0.002597,
		0.002622,
		0.002647,
		0.002672,
		0.002698,
		0.002723,
		0.002749,
		0.002776,
		0.002806,
		0.002835,
		0.002865,
		0.002894,
		0.002921,
		0.002947,
		0.002972,
		0.002997,
		0.003022,
		0.003047,
		0.003072,
		0.003097,
		0.003122,
		0.003147,
		0.003173,
		0.003198,
		0.003223,
		0.003248,
		0.003273,
		0.003298,
		0.003323,
		0.003348,
		0.003374,
		0.003402,
		0.003428,
		0.003454,
		0.003479,
		0.003504,
		0.003529,
		0.003553,
		0.003578,
		0.003603,
		0.003628,
		0.003653,
		0.003678,
		0.003703,
		0.003728,
		0.003753,
		0.003778,
		0.003803,
		0.003828,
		0.003853,
		0.003879,
		0.003904,
		0.003929,
		0.003954,
		0.003979,
		0.004004,
		0.004029,
		0.004054,
		0.004079,
		0.004104,
		0.004129,
		0.004154,
		0.004184,
		0.004214,
		0.004242,
		0.004269,
		0.004297,
		0.004326,
		0.004352,
		0.004377,
		0.004402,
		0.004427,
		0.004452,
		0.004477,
		0.004504,
		0.004542,
		0.004601,
		0.004645,
		0.004672,
		0.004697,
		0.004722,
		0.004747,
		0.004772,
		0.004797,
		0.004823,
		0.004848,
		0.004873,
		0.004898,
		0.004923,
		0.004948,
		0.004973,
		0.004999,
		0.005033,
		0.005101,
		0.005172,
		0.005247,
		0.005328,
		0.005386,
		0.005421,
		0.005452,
		0.005481,
		0.005512,
		0.005541,
		0.005567,
		0.005593,
		0.005618,
		0.005643,
		0.005668,
		0.005693,
		0.005717,
		0.005742,
		0.005767,
		0.005792,
		0.005818,
		0.005843,
		0.005868,
		0.005893,
		0.005918,
		0.005963,
		0.006045,
		0.006074,
		0.006099,
		0.006124,
		0.006149,
		0.006174,
		0.006201,
		0.006282,
		0.006428,
		0.006565,
		0.006599,
		0.006624,
		0.006649,
		0.006674,
		0.006699,
		0.006724,
		0.006749,
		0.006774,
		0.006800,
		0.006835,
		0.007008,
		0.007251,
		0.007564,
		0.007972,
		0.008434,
		0.009088,
		0.009925,
		0.011737,
		0.019442,
		1.000000
};

static const uint8_t pCW_len[461] = {
		21,
		21,
		19,
		16,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		16,
		16,
		17,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		15,
		13,
		13,
		13,
		14,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		16,
		15,
		15,
		14,
		14,
		13,
		13,
		14,
		15,
		15,
		15,
		15,
		15,
		15,
		15,
		15,
		15,
		15,
		14,
		13,
		12,
		12,
		12,
		12,
		12,
		12,
		13,
		13,
		13,
		13,
		12,
		12,
		11,
		12,
		12,
		13,
		12,
		13,
		13,
		13,
		13,
		12,
		12,
		12,
		13,
		13,
		14,
		13,
		13,
		12,
		12,
		12,
		13,
		13,
		12,
		12,
		12,
		12,
		13,
		13,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		13,
		12,
		11,
		11,
		12,
		13,
		13,
		12,
		12,
		12,
		12,
		12,
		12,
		11,
		11,
		11,
		11,
		11,
		11,
		11,
		11,
		12,
		11,
		11,
		10,
		11,
		11,
		11,
		11,
		11,
		11,
		10,
		10,
		10,
		9,
		9,
		9,
		9,
		9,
		9,
		9,
		9,
		9,
		8,
		8,
		8,
		8,
		8,
		8,
		8,
		8,
		7,
		7,
		7,
		7,
		7,
		7,
		7,
		7,
		7,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		5,
		5,
		5,
		5,
		5,
		5,
		5,
		5,
		5,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		6,
		7,
		7,
		7,
		7,
		7,
		7,
		7,
		7,
		7,
		8,
		8,
		8,
		8,
		8,
		9,
		9,
		9,
		9,
		9,
		9,
		9,
		9,
		9,
		9,
		9,
		9,
		10,
		10,
		10,
		10,
		11,
		11,
		11,
		11,
		11,
		11,
		11,
		11,
		11,
		11,
		12,
		12,
		12,
		12,
		12,
		12,
		13,
		13,
		13,
		13,
		13,
		13,
		13,
		14,
		13,
		13,
		12,
		12,
		13,
		13,
		13,
		13,
		13,
		13,
		13,
		14,
		14,
		13,
		12,
		12,
		13,
		13,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		13,
		13,
		12,
		12,
		13,
		14,
		15,
		15,
		15,
		15,
		16,
		16,
		16,
		16,
		15,
		15,
		15,
		14,
		14,
		13,
		12,
		12,
		13,
		14,
		15,
		15,
		14,
		14,
		14,
		14,
		14,
		14,
		15,
		15,
		15,
		15,
		14,
		14,
		14,
		14,
		14,
		13,
		13,
		12,
		13,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		14,
		15,
		14,
		14,
		13,
		13,
		14,
		15,
		16,
		15,
		15,
		15,
		16,
		15,
		15,
		14,
		13,
		13,
		13,
		14,
		15,
		16,
		17,
		16,
		14,
		14,
		13,
		14,
		14,
		15,
		15,
		15,
		14,
		14,
		13,
		14,
		14,
		15,
		16,
		17,
		16,
		17,
		17,
		16,
		16,
		16,
		16,
		16,
		15,
		15,
		14,
		14,
		14,
		13,
		13,
		13,
		13,
		14,
		15,
		14,
		13,
		13,
		14,
		15,
		18,
		16,
		14,
		13,
		13,
		13,
		14,
		16,
		17,
		17,
		16,
		15,
		14,
		14,
		14,
		14,
		14,
		14,
		15,
		15,
		16,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		17,
		20

};

static const uint32_t pCW[461] = {
		487455,
		487454,
		121862,
		36738,
		21387,
		21023,
		21305,
		21304,
		18281,
		23619,
		18282,
		18248,
		30464,
		4930,
		21385,
		21020,
		18232,
		18249,
		18280,
		18233,
		4962,
		4928,
		60190,
		60187,
		4963,
		60148,
		60186,
		60191,
		59951,
		60149,
		59938,
		60101,
		60100,
		59950,
		59940,
		52019,
		36829,
		52017,
		36739,
		36626,
		36828,
		36624,
		36625,
		22399,
		5905,
		6503,
		1339,
		2796,
		6836,
		9125,
		33420,
		33421,
		27335,
		22398,
		27334,
		19411,
		22127,
		22126,
		19410,
		19409,
		16149,
		16148,
		15234,
		11798,
		11808,
		30094,
		11198,
		9177,
		2658,
		7496,
		7546,
		5530,
		4571,
		13675,
		18412,
		29968,
		29952,
		18421,
		18420,
		18322,
		13708,
		8075,
		8353,
		4595,
		3770,
		1394,
		1186,
		1383,
		2085,
		3758,
		2422,
		4581,
		4168,
		2423,
		3749,
		953,
		1875,
		657,
		2291,
		1136,
		3896,
		1338,
		4172,
		4579,
		1479,
		2100,
		1184,
		1381,
		319,
		7490,
		2626,
		4576,
		1330,
		2103,
		1712,
		3250,
		1905,
		2383,
		3253,
		1210,
		1185,
		1719,
		316,
		4183,
		4039,
		8354,
		9209,
		9188,
		9187,
		9157,
		4853,
		3436,
		1701,
		1627,
		1149,
		1013,
		1337,
		2382,
		3747,
		1212,
		1187,
		2089,
		2102,
		658,
		1046,
		696,
		335,
		76,
		78,
		331,
		848,
		1949,
		1008,
		1884,
		477,
		941,
		330,
		688,
		857,
		1040,
		855,
		604,
		975,
		524,
		239,
		407,
		284,
		404,
		285,
		175,
		125,
		87,
		70,
		18,
		242,
		232,
		128,
		84,
		47,
		42,
		34,
		8,
		100,
		63,
		56,
		57,
		52,
		49,
		30,
		22,
		5,
		61,
		59,
		55,
		54,
		47,
		34,
		29,
		23,
		16,
		12,
		9,
		6,
		0,
		26,
		24,
		21,
		20,
		18,
		19,
		22,
		28,
		31,
		1,
		5,
		4,
		3,
		7,
		13,
		17,
		20,
		19,
		22,
		25,
		27,
		30,
		33,
		51,
		16,
		28,
		36,
		48,
		62,
		70,
		92,
		93,
		120,
		40,
		58,
		85,
		129,
		233,
		86,
		149,
		150,
		127,
		124,
		93,
		118,
		173,
		215,
		263,
		405,
		486,
		143,
		185,
		426,
		938,
		333,
		505,
		851,
		858,
		698,
		594,
		849,
		1047,
		1146,
		1881,
		1012,
		1378,
		1015,
		1214,
		2083,
		3757,
		2760,
		7491,
		7551,
		4203,
		2381,
		2758,
		4602,
		2280,
		7513,
		2430,
		3897,
		3772,
		1318,
		2029,
		4165,
		4164,
		1477,
		1137,
		2761,
		2947,
		4862,
		3400,
		2295,
		2303,
		2759,
		7547,
		2659,
		2953,
		4863,
		8349,
		13005,
		9208,
		5583,
		2638,
		2282,
		2283,
		7522,
		2764,
		3760,
		3771,
		4202,
		12994,
		5914,
		4569,
		5347,
		16677,
		2482,
		9117,
		10509,
		9137,
		29971,
		13666,
		5327,
		9155,
		2278,
		1475,
		2090,
		3252,
		3426,
		6838,
		5898,
		5915,
		15039,
		5582,
		2639,
		634,
		2662,
		6874,
		5892,
		18413,
		18415,
		8072,
		8352,
		2948,
		622,
		618,
		623,
		4175,
		1138,
		3774,
		3417,
		4761,
		9189,
		9203,
		9176,
		8348,
		6855,
		8339,
		9160,
		14995,
		14977,
		12995,
		9211,
		15036,
		1233,
		14994,
		2625,
		1472,
		1143,
		617,
		16676,
		15233,
		30092,
		18323,
		29953,
		2480,
		30051,
		4559,
		621,
		2797,
		2798,
		7550,
		14986,
		30075,
		52018,
		5089,
		2483,
		9201,
		637,
		7489,
		635,
		8365,
		5893,
		5345,
		4563,
		6839,
		619,
		6498,
		2624,
		9186,
		18368,
		59941,
		5088,
		59939,
		4929,
		4931,
		27418,
		11799,
		2545,
		10508,
		10653,
		29974,
		8073,
		15024,
		6875,
		3809,
		6499,
		2028,
		1328,
		2790,
		4038,
		5344,
		6832,
		4173,
		3401,
		2956,
		13674,
		60930,
		27419,
		15038,
		6496,
		2427,
		4589,
		9185,
		9136,
		38817,
		30471,
		52016,
		11062,
		8364,
		4760,
		5598,
		9154,
		9200,
		9202,
		1273,
		16711,
		36627,
		30470,
		18283,
		23618,
		21021,
		21386,
		21022,
		21384,
		38816,
		243726


};

static const uint8_t pIncrements[9] = {
		115,
		58,
		29,
		15,
		8,
		4,
		2,
		1,
		1
};

static const uint32_t pMask[] = {
		0x1,
		0x3,
		0x7,
};

void taskCompress( void * pvParameters );

int compressor( RADAR_DATA_TYPE* inBuf, size_t inSize, uint32_t* outBuf, uint32_t datalen);

int find_code(float target);

#endif /* COMPONENTS_TASKCOMPRESS_TASKCOMPRESS_H_ */
